name: Deploy

on:
  workflow_run:
    workflows:
      - CI
      - ci.yml
    branches:
      - main
    tags:
      - 'v*'
    types:
      - completed

concurrency:
  group: deploy
  cancel-in-progress: false

jobs:
  publish:
    name: Publish image
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      image: ${{ steps.image.outputs.name }}
      tag: ${{ steps.meta.outputs.version }}
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
      TARGET_REF: ${{ github.event_name == 'workflow_run' && format('refs/heads/{0}', github.event.workflow_run.head_branch) || github.ref }}
      TARGET_SHA: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}
    steps:
      - name: Resolve image name
        id: image
        run: echo "name=${IMAGE_NAME}" >> "$GITHUB_OUTPUT"

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          ref: ${{ env.TARGET_REF }}
          sha: ${{ env.TARGET_SHA }}
          tags: |
            type=sha,format=long,prefix=sha-
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable=${{ (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main') || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}

      - name: Publish confirmation
        env:
          PUBLISHED_TAG: ${{ steps.meta.outputs.version }}
          PUBLISHED_COMMIT: ${{ github.event.workflow_run.head_sha }}
        run: |
          cat <<SUMMARY >> "$GITHUB_STEP_SUMMARY"
          ### Image publish
          - Image: ${IMAGE_NAME}
          - Tag: ${PUBLISHED_TAG}
          - Commit: ${PUBLISHED_COMMIT}
          SUMMARY

  remote-deploy:
    name: Remote deploy
    needs: publish
    if: ${{ needs.publish.result == 'success' && secrets.SSH_HOST && secrets.SSH_USER && secrets.SSH_KEY && secrets.DEPLOY_PATH && secrets.GHCR_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        env:
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          GHCR_USERNAME: ${{ github.repository_owner }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          APP_IMAGE: ${{ format('{0}:{1}', needs.publish.outputs.image, needs.publish.outputs.tag) }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: DEPLOY_PATH,GHCR_USERNAME,GHCR_TOKEN,APP_IMAGE
          script: |
            set -euo pipefail
            docker login ghcr.io -u "${GHCR_USERNAME}" -p "${GHCR_TOKEN}"
            cd "${DEPLOY_PATH}"
            git pull --ff-only
            APP_IMAGE="${APP_IMAGE}" docker compose pull app
            docker compose up -d app
            docker image prune -f
